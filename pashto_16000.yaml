name: &name "pashto_QuartzNet15x5"
sample_rate: &sample_rate 16000
repeat: &repeat 1
dropout: &dropout 0.0
separable: &separable true
labels: &labels ["\u063a", "\u0634", "\u06a9", "\u0698", "\u0693", "\u062c", "\u0686", "\u069a", "\u0636", "\u0644", "\u0626", "\u06bc", "\u0621", "\u06d0", "\u0639", "\u0630", "\u06cc", "\u0622", "\u062b", "\u0627", "\u0645", "\u0685", "\u0647", "\u062f", "\u062e", "\u067e", "\u067c", "\u0633", "\u0635", "\u0642", "\u0632", "\u064b", "\u0641", "\u062a", "\u06cd", "\u06ab", "\u0681", "\u064a", "\u0628", "\u0646", "\u0631", "\u0637", " ", "\u0689", "\u0648", "\u0638", "\u062d", "\u0696"]

model:
  train_ds:
    manifest_filepath: ???
    sample_rate: 16000
    labels: *labels
    batch_size: 12
    trim_silence: True
    max_duration: 33.0
    shuffle: True
    is_tarred: False
    tarred_audio_filepaths: null
    num_workers: 16

  validation_ds:
    manifest_filepath: ???
    sample_rate: 16000
    labels: *labels
    batch_size: 12
    shuffle: False
    num_workers: 16

  preprocessor:
    cls: nemo.collections.asr.modules.AudioToMelSpectrogramPreprocessor
    params:
      normalize: "per_feature"
      window_size: 0.02
      sample_rate: *sample_rate
      window_stride: 0.01
      window: "hann"
      features: &n_mels 64
      n_fft: 512
      frame_splicing: 1
      dither: 0.00001
      stft_conv: false

  spec_augment:
    cls: nemo.collections.asr.modules.SpectrogramAugmentation
    params:
      rect_freq: 50
      rect_masks: 5
      rect_time: 120

  encoder:
    cls: nemo.collections.asr.modules.ConvASREncoder
    params:
      feat_in: *n_mels
      activation: relu
      conv_mask: true

      jasper:
        - filters: 128
          repeat: 1
          kernel: [11]
          stride: [1]
          dilation: [1]
          dropout: *dropout
          residual: true
          separable: *separable
          se: true
          se_context_size: -1

        - filters: 256
          repeat: *repeat
          kernel: [13]
          stride: [1]
          dilation: [1]
          dropout: *dropout
          residual: true
          separable: *separable
          se: true
          se_context_size: -1

        - filters: 256
          repeat: *repeat
          kernel: [15]
          stride: [1]
          dilation: [1]
          dropout: *dropout
          residual: true
          separable: *separable
          se: true
          se_context_size: -1

        - filters: 256
          repeat: *repeat
          kernel: [17]
          stride: [1]
          dilation: [1]
          dropout: *dropout
          residual: true
          separable: *separable
          se: true
          se_context_size: -1

        - filters: 256
          repeat: *repeat
          kernel: [19]
          stride: [1]
          dilation: [1]
          dropout: *dropout
          residual: true
          separable: *separable
          se: true
          se_context_size: -1

        - filters: 256
          repeat: 1
          kernel: [21]
          stride: [1]
          dilation: [1]
          dropout: 0.0
          residual: false
          separable: *separable
          se: true
          se_context_size: -1

        - filters: &enc_feat_out 1024
          repeat: 1
          kernel: [1]
          stride: [1]
          dilation: [1]
          dropout: 0.0
          residual: false
          separable: *separable
          se: true
          se_context_size: -1

  decoder:
    cls: nemo.collections.asr.modules.ConvASRDecoder
    params:
      feat_in: 1024
      num_classes: 28
      vocabulary: *labels

  optim:
    name: novograd
    # cls: nemo.core.optim.optimizers.Novograd
    lr: .0001
    # optimizer arguments
    betas: [0.8, 0.5]
    weight_decay: 0.001

    # scheduler setup
    sched:
      name: CosineAnnealing

      # pytorch lightning args
      monitor: val_loss
      reduce_on_plateau: false

      # Scheduler params
      warmup_steps: null
      warmup_ratio: null
      min_lr: 0.0
      last_epoch: -1

trainer:
  gpus: 0 # number of gpus
  max_epochs: 5
  max_steps: null # computed at runtime if not set
  num_nodes: 1
  distributed_backend: ddp
  accumulate_grad_batches: 1
  checkpoint_callback: False  # Provided by exp_manager
  logger: False  # Provided by exp_manager
  row_log_interval: 100  # Interval of logging.
  val_check_interval: 1.0 # check once per epoch .25 for 4 times per epoch

exp_manager:
  exp_dir: null
  name: *name
  create_tensorboard_logger: True
  create_checkpoint_callback: True

hydra:
  run:
    dir: .
  job_logging:
    root:
      handlers: null
